<UserControl Name="Control"
             x:Class="PluginManager.View.PluginList.PluginList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:commandFactory="clr-namespace:Whathecode.System.Windows.Input.CommandFactory;assembly=Whathecode.PresentationFramework"
             xmlns:behaviors="clr-namespace:Whathecode.System.Xaml.Behaviors;assembly=Whathecode.PresentationFramework"
             xmlns:binding="clr-namespace:PluginManager.ViewModel.PluginList.Binding"
             xmlns:pluginList="clr-namespace:PluginManager.ViewModel.PluginList"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance Type=pluginList:PluginListViewModel}">

	<StackPanel>
		<TextBlock
			Text="{Binding PluginListName}"
			FontSize="18"
			HorizontalAlignment="Center" />
		<ScrollViewer BorderThickness="0" VerticalScrollBarVisibility="Auto">
			<ListView
				HorizontalAlignment="Stretch"
				BorderThickness="0" MinWidth="250"
				ItemsSource="{Binding PluginList}"
				SelectedItem="{Binding SelectedConfigurationItem}"
				Name="ListView">

				<ListView.Resources>
					<Style TargetType="TextBlock">
						<Setter Property="Margin" Value="10,0,0,0" />
						<Setter Property="VerticalAlignment" Value="Center" />
					</Style>
					<Style TargetType="StackPanel">
						<Setter Property="VerticalAlignment" Value="Center" />
					</Style>
					<Style TargetType="DockPanel">
						<Setter Property="MinHeight" Value="55" />
						<Setter Property="MinWidth" Value="200" />
						<Setter Property="LastChildFill" Value="False" />
					</Style>
				</ListView.Resources>

				<ListView.ItemContainerStyle>
					<Style TargetType="ListBoxItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="BorderBrush" Value="Black" />
						<Setter Property="Margin" Value="1" />
					</Style>
				</ListView.ItemContainerStyle>

				<ListView.Style>
					<Style TargetType="ListView">
						<Style.Triggers>
							<Trigger Property="HasItems" Value="False">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ListView">
											<Border MinWidth="320" BorderThickness="1" BorderBrush="Black">
												<TextBlock
													Text="No items found."
													Margin="20"
													HorizontalAlignment="Center"
													VerticalAlignment="Center"/>
											</Border>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>
					</Style>
				</ListView.Style>

				<ListView.ItemTemplate>
					<DataTemplate>
						<DockPanel LastChildFill="False" MinWidth="320">
							<StackPanel
								DockPanel.Dock="Left"
								Orientation="Horizontal"
								VerticalAlignment="Center">
								<Image
									Width="24"
									Height="24"
									Source="{Binding Icon}"
									Margin="5"
									Cursor="Hand"
									behaviors:MouseBehavior.LeftClickCommand="{commandFactory:CommandBinding {x:Static binding:Commands.DownloadAndOpenConfig}, ElementName=Control}" />
								<StackPanel Margin="5">
									<TextBlock Text="{Binding Version, StringFormat='Plug-in Version: {0}'}" />
									<TextBlock Text="{Binding Author, StringFormat='Author: {0}'}" VerticalAlignment="Center" />
									<TextBlock Text="{Binding SupportedVersions[0], StringFormat='Supported Version: {0}'}" />
								</StackPanel>
							</StackPanel>
							
							<!--TODO: Buttons that will be used to control plug-ins.-->
							<!--<StackPanel
								DockPanel.Dock="Right"
								MinWidth="83"
								Margin="3"
								VerticalAlignment="Center">

								--><!-- Buttons panel is shown only when user click on given configuration. --><!--
								<StackPanel.Visibility>
									<MultiBinding
										UpdateSourceTrigger="PropertyChanged"
										Converter="{StaticResource ButtonsVisibilityConverter}">
										<Binding
											ElementName="Control"
											Path="DataContext.ApplicationDatails.SelectedConfigurationItem.Id" />
										<Binding Path="Id" />
									</MultiBinding>
								</StackPanel.Visibility>
								

								<Button
									Content="Install"
									Margin="0,0,0,5"
									Visibility="{Binding ElementName=Control, Path=DataContext.ApplicationDatails.State, 
									Converter={data:EnumHasFlagConverter Flag={x:Static common:AppFilter.Availible}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}"
									Command="{commandFactory:CommandBinding {x:Static binding:Commands.DownloadAndOpenInstaller}, 
									ElementName=Control}" />
								<Button
									Content="Open"
									Visibility="{Binding ElementName=Control, Path=DataContext.ApplicationDatails.State, 
									Converter={data:EnumHasFlagConverter Flag={x:Static common:AppFilter.Availible}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}"
									Command="{commandFactory:CommandBinding {x:Static binding:Commands.DownloadAndOpenConfig}, 
									ElementName=Control}" />
								<Button
									Content="Update"
									Visibility="{Binding ElementName=Control, Path=DataContext.ApplicationDatails.State, 
									Converter={data:EnumHasFlagConverter Flag={x:Static common:AppFilter.Updates}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
								<Button
									Content="Uninstall"
									Margin="0,0,0,5"
									Visibility="{Binding ElementName=Control, Path=DataContext.ApplicationDatails.State, 
									Converter={data:EnumHasFlagConverter Flag={x:Static common:AppFilter.Installed}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
								<Button
									Content="Enable/Disable"
									Visibility="{Binding ElementName=Control, Path=DataContext.ApplicationDatails.State, 
									Converter={data:EnumHasFlagConverter Flag={x:Static common:AppFilter.Installed}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
							</StackPanel>-->
						</DockPanel>
					</DataTemplate>
				</ListView.ItemTemplate>

			</ListView>
		</ScrollViewer>
	</StackPanel>
</UserControl>