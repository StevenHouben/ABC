<Window
	x:Name="Window"
	Title="Plugin Manager"
	Width="1420"
	x:Class="PluginManager.View.AppOverview.AppOverview"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	d:DataContext="{d:DesignInstance Type=pluginsOverview:AppOverviewViewModel}"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:local="clr-namespace:PluginManager.View.AppOverview"
	xmlns:pluginList="clr-namespace:PluginManager.View.PluginList"
	xmlns:pluginsOverview="clr-namespace:PluginManager.ViewModel.PluginsOverview"
	xmlns:pluginDetails="clr-namespace:PluginManager.ViewModel.PluginDetails"
	xmlns:converters="clr-namespace:Whathecode.System.Windows.Data;assembly=Whathecode.PresentationFramework"
	MinWidth="940"
	MinHeight="600">
	<Window.Resources>
		<local:StateToBrushConverter x:Key="StateToBrushConverter" />
	</Window.Resources>
	<DockPanel LastChildFill="True">

		<local:MenuControl
			HorizontalAlignment="Left"
			Margin="5"
			Height="auto"
			BorderThickness="1"
			x:Name="Menu"
			DockPanel.Dock="Left" />

		<ScrollViewer BorderThickness="0" VerticalScrollBarVisibility="Auto" DockPanel.Dock="Right">

			<StackPanel
				Margin="10, 10, 10, 0"
				Name="Plugins"
				DataContext="{Binding SelectedItem, ElementName=AppsListView}"
				d:DataContext="{d:DesignInstance Type=pluginDetails:PluginDetailsViewModel}"
				Visibility="{Binding ElementName=Window, Path=DataContext.DisplayedPlugins.Count,
									Converter={converters:SingleConditionConverter Expression='[0] > 0', 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Hidden}}}">

				<StackPanel.Resources>
					<Style TargetType="StackPanel">
						<Setter Property="Margin" Value="0,0,0,10" />
					</Style>
					<Style TargetType="Image">
						<Setter Property="Width" Value="20" />
						<Setter Property="Height" Value="20" />
						<Setter Property="Margin" Value="7,0,0,0" />
						<Setter Property="VerticalAlignment" Value="Center" />
					</Style>
					<Style TargetType="TextBlock">
						<Setter Property="VerticalAlignment" Value="Center" />
					</Style>
				</StackPanel.Resources>

				<pluginList:PluginList
					DataContext="{Binding InterruptionsList}"
					Visibility="{Binding ElementName=Window, Path=DataContext.State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static pluginsOverview:OverviewState.Interruptions}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
				<pluginList:PluginList
					DataContext="{Binding VdmList}"
					Visibility="{Binding ElementName=Window, Path=DataContext.State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static pluginsOverview:OverviewState.Applications}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
				<pluginList:PluginList
					DataContext="{Binding PersistanceList}"
					Visibility="{Binding ElementName=Window, Path=DataContext.State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static pluginsOverview:OverviewState.Applications}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />

			</StackPanel>
		</ScrollViewer>

		<ListView
			ItemsSource="{Binding DisplayedPlugins}"
			Name="AppsListView"
			BorderThickness="1"
			Padding="5"
			DockPanel.Dock="Left"
			SelectedItem="{Binding SelectedApplication}">

			<ListView.Resources>
				<Style TargetType="TextBlock">
					<Setter Property="Margin" Value="10,0,0,0" />
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>
				<Style TargetType="StackPanel">
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>
				<Style TargetType="DockPanel">
					<Setter Property="MinHeight" Value="55" />
					<Setter Property="MinWidth" Value="300" />
					<Setter Property="LastChildFill" Value="False" />
				</Style>
			</ListView.Resources>

			<ListView.ItemsPanel>
				<ItemsPanelTemplate>
					<WrapPanel
						Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}" />
				</ItemsPanelTemplate>
			</ListView.ItemsPanel>

			<ListView.ItemContainerStyle>
				<Style TargetType="ListBoxItem">
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="BorderBrush" Value="Black" />
					<Setter Property="Margin" Value="1" />
				</Style>
			</ListView.ItemContainerStyle>

			<ListView.ItemTemplate>
				<DataTemplate>
					<DockPanel
						MinWidth="400"
						MaxWidth="400"
						MinHeight="60">

						<Image
							Width="40"
							Height="40"
							Source="{Binding Plugin.Icon}"
							Margin="5"
							DockPanel.Dock="Left" />

						<Grid Margin="5">

							<StackPanel
								VerticalAlignment="Center"
								HorizontalAlignment="Left">
								<TextBlock
									Text="{Binding Plugin.Name}"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									FontWeight="Bold"
									TextWrapping="Wrap"
									FontSize="14"
									MaxWidth="300" />
								<TextBlock
									Text="{Binding Plugin.CompanyName}"
									FontSize="12"
									VerticalAlignment="Bottom" />
							</StackPanel>

							<StackPanel
								Orientation="Horizontal"
								VerticalAlignment="Bottom"
								HorizontalAlignment="Right">

								<local:PluginIcon
									Visibility="{Binding VdmList.PluginList.Count,
										Converter={converters:SingleConditionConverter Expression='[0] > 0', IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}"
									IconText="V"
									IconBackground1="{Binding VdmState, Converter={StaticResource StateToBrushConverter}}" />

								<local:PluginIcon
									Visibility="{Binding PersistanceList.PluginList.Count,
										Converter={converters:SingleConditionConverter Expression='[0] > 0', IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}"
									IconText="P"
									IconBackground1="{Binding PersistanceState, Converter={StaticResource StateToBrushConverter}}" />

								<local:PluginIcon
									Visibility="{Binding InterruptionsList.PluginList.Count,
										Converter={converters:SingleConditionConverter Expression='[0] > 0', IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}"
									IconText="I"
									IconBackground1="{Binding InterruptionsState, Converter={StaticResource StateToBrushConverter}}" />

							</StackPanel>
						</Grid>


						<!--TODO: Buttons that will be used to control plug-ins.-->
						<!--<StackPanel
							DockPanel.Dock="Right"
							Margin="5"
							HorizontalAlignment="Right"
							VerticalAlignment="Center">

							<StackPanel.Visibility>
								<MultiBinding
									UpdateSourceTrigger="PropertyChanged"
									Converter="{converters:EqualsConverter IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Hidden}}">
									<Binding ElementName="Window" Path="DataContext.SelectedApplication.Plugin.Id" />
									<Binding Path="Plugin.Id" />
								</MultiBinding>
							</StackPanel.Visibility>

							<StackPanel.Resources>
								<Style TargetType="Button">
									<Setter Property="Width" Value="85" />
								</Style>
							</StackPanel.Resources>

							<Button
								Content="Download All"
								Visibility="{Binding State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static common:AppFilter.Availible}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
							<Button
								Content="Update"
								Visibility="{Binding State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static common:AppFilter.Updates}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
							<Button
								Content="Uninstall"
								Margin="0,0,0,5"
								Visibility="{Binding State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static common:AppFilter.Installed}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
							<Button
								Content="Enable/Disable"
								Visibility="{Binding State, 
									Converter={converters:EnumHasFlagConverter Flag={x:Static common:AppFilter.Installed}, 
									IfTrue={x:Static Visibility.Visible}, IfFalse={x:Static Visibility.Collapsed}}}" />
						</StackPanel>-->
					</DockPanel>
				</DataTemplate>
			</ListView.ItemTemplate>

			<ListView.Style>
				<Style TargetType="ListView">
					<Style.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ListView">
										<TextBlock
											Text="No items found."
											Margin="20"
											HorizontalAlignment="Center" />
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>
			</ListView.Style>
		</ListView>

	</DockPanel>
</Window>